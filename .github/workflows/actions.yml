on: push
jobs:
  build-testing-action:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - name: Cache node_modules
        uses: actions/cache@v3

        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: npm ci
      - run: npx ncc build .github/actions/hello/index.js -o .github/actions/hello/dist
      - run: npx ncc build .github/actions/issue/index.js -o .github/actions/issue/dist

  testing-action:
    needs: build-testing-action
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          cd .github/actions
          pwd
          ls -a
      - uses: ./.github/actions/issue
        id: issue
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: Title
          body: Body
          assignees: |
            ${{ github.event.pull_request.user.login }}
            Maksym-Ulshyn
      - run: |
          echo Issue output
          echo "Time: ${{steps.issue.outputs.issue}}"
      - uses: ./.github/actions/hello
        id: hello
        with:
          who-to-greet: 'World'
      - run: |
          echo "Time: ${{steps.hello.outputs.time}}"
          echo $Hello
